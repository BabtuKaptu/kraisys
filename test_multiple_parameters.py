#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏
"""
import sys
import time
from PyQt6.QtWidgets import QApplication, QMessageBox
from PyQt6.QtCore import QTimer
from PyQt6.QtTest import QTest

from database.connection import DatabaseConnection
from ui.references.model_specification_form_v4 import ModelSpecificationFormV4

def test_multiple_parameters():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...")

    app = QApplication.instance()
    if not app:
        app = QApplication(sys.argv)

    db = DatabaseConnection()

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å –•–ª—ã–Ω–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (ID: 7)
    model_form = ModelSpecificationFormV4(model_id=7, is_variant=False)
    model_form.show()

    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    app.processEvents()
    time.sleep(2)

    print("‚úì –§–æ—Ä–º–∞ –º–æ–¥–µ–ª–∏ –•–ª—ã–Ω–æ–≤ –æ—Ç–∫—Ä—ã—Ç–∞")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏"
    parameters_tab_index = None
    for i in range(model_form.tabs.count()):
        if "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã" in model_form.tabs.tabText(i):
            model_form.tabs.setCurrentIndex(i)
            parameters_tab_index = i
            break

    if parameters_tab_index is not None:
        print("‚úì –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏'")

        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        model_form.perforation_table.setRowCount(0)
        model_form.lining_table.setRowCount(0)

        print("üìù –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–π...")

        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∏–ø–æ–≤ –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏
        # (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥–∏, –Ω–æ –º—ã –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ)

        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–π
        conn = db.get_connection()
        cursor = conn.cursor()

        cursor.execute("SELECT id, name FROM perforation_types LIMIT 3")
        perf_types = cursor.fetchall()

        for perf_type in perf_types:
            perf_id, perf_name = perf_type
            row = model_form.perforation_table.rowCount()
            model_form.perforation_table.insertRow(row)
            from PyQt6.QtWidgets import QTableWidgetItem
            from PyQt6.QtCore import Qt
            item = QTableWidgetItem(perf_name)
            item.setData(Qt.ItemDataRole.UserRole, perf_id)
            model_form.perforation_table.setItem(row, 0, item)
            print(f"  + –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏—è: {perf_name} (ID: {perf_id})")

        # –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–¥–∫–ª–∞–¥–æ–∫
        cursor.execute("SELECT id, name FROM lining_types LIMIT 2")
        lining_types = cursor.fetchall()

        for lining_type in lining_types:
            lining_id, lining_name = lining_type
            row = model_form.lining_table.rowCount()
            model_form.lining_table.insertRow(row)
            item = QTableWidgetItem(lining_name)
            item.setData(Qt.ItemDataRole.UserRole, lining_id)
            model_form.lining_table.setItem(row, 0, item)
            print(f"  + –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–∫–ª–∞–¥–∫–∞: {lining_name} (ID: {lining_id})")

        cursor.close()
        db.put_connection(conn)

        print(f"\\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü:")
        print(f"   –ü–µ—Ä—Ñ–æ—Ä–∞—Ü–∏—è: {model_form.perforation_table.rowCount()} —Å—Ç—Ä–æ–∫")
        print(f"   –ü–æ–¥–∫–ª–∞–¥–∫–∞: {model_form.lining_table.rowCount()} —Å—Ç—Ä–æ–∫")

        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        print("\\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")

        try:
            model_form.save_model()
            print("‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")

    else:
        print("‚ùå –í–∫–ª–∞–¥–∫–∞ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    model_form.close()

    print("\\n=== –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ===")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = db.get_connection()
    cursor = conn.cursor()

    cursor.execute("""
        SELECT perforation_id, lining_id, perforation_ids, lining_ids
        FROM specifications
        WHERE model_id = 7
        ORDER BY created_at DESC
        LIMIT 1
    """)

    result = cursor.fetchone()
    if result:
        perf_id, lining_id, perf_ids, lining_ids = result
        print(f"\\nüìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        print(f"   perforation_id: {perf_id}")
        print(f"   lining_id: {lining_id}")
        print(f"   perforation_ids: {perf_ids}")
        print(f"   lining_ids: {lining_ids}")

        if perf_ids and lining_ids:
            print("\\n‚úÖ –£–°–ü–ï–•: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –Ω–æ–≤—ã—Ö –ø–æ–ª—è—Ö!")
        else:
            print("\\n‚ö†Ô∏è  –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")

    cursor.close()
    db.put_connection(conn)

    print("\\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_multiple_parameters()
    if success:
        print("\\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–µ!")

if __name__ == "__main__":
    main()