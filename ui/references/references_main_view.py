"""Unified References view with sidebar navigation"""
from PyQt6.QtWidgets import *
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont


class ReferencesMainView(QWidget):
    """–ì–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —Å –±–æ–∫–æ–≤—ã–º –º–µ–Ω—é"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.current_reference = None
        self.setup_ui()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI"""
        layout = QHBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(0)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        self.setup_sidebar(layout)

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        splitter = QSplitter(Qt.Orientation.Horizontal)
        layout.addWidget(splitter)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        self.content_widget = QStackedWidget()
        splitter.addWidget(self.sidebar_widget)
        splitter.addWidget(self.content_widget)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏: 250px –¥–ª—è sidebar, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        splitter.setSizes([250, 800])
        splitter.setChildrenCollapsible(False)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
        self.load_references()

    def setup_sidebar(self, parent_layout):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
        self.sidebar_widget = QWidget()
        self.sidebar_widget.setMaximumWidth(250)
        self.sidebar_widget.setMinimumWidth(200)

        # –°—Ç–∏–ª—å –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
        self.sidebar_widget.setStyleSheet("""
            QWidget {
                background-color: #f5f5f5;
                border-right: 1px solid #ddd;
            }
            QListWidget {
                background-color: transparent;
                border: none;
                font-size: 14px;
                selection-background-color: #0078d4;
                selection-color: white;
            }
            QListWidget::item {
                padding: 10px;
                border-bottom: 1px solid #eee;
            }
            QListWidget::item:hover {
                background-color: #e1f5fe;
            }
            QLabel {
                font-weight: bold;
                font-size: 16px;
                padding: 15px 10px 10px 10px;
                color: #333;
            }
        """)

        sidebar_layout = QVBoxLayout(self.sidebar_widget)
        sidebar_layout.setContentsMargins(0, 0, 0, 0)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏")
        sidebar_layout.addWidget(title_label)

        # –°–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        self.references_list = QListWidget()
        self.references_list.itemClicked.connect(self.on_reference_selected)
        sidebar_layout.addWidget(self.references_list)

        sidebar_layout.addStretch()

    def load_references(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤"""
        references = [
            ("perforation_types", "üîπ –¢–∏–ø—ã –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏"),
            ("lining_types", "üîπ –¢–∏–ø—ã –ø–æ–¥–∫–ª–∞–¥–∫–∏"),
            ("cutting_parts", "üîπ –î–µ—Ç–∞–ª–∏ —Ä–∞—Å–∫—Ä–æ—è"),
            ("lasting_types", "üîπ –¢–∏–ø—ã –∑–∞—Ç—è–∂–∫–∏")
        ]

        for ref_id, ref_title in references:
            item = QListWidgetItem(ref_title)
            item.setData(Qt.ItemDataRole.UserRole, ref_id)
            self.references_list.addItem(item)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        self.load_reference_widgets()

        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if self.references_list.count() > 0:
            self.references_list.setCurrentRow(0)
            self.on_reference_selected(self.references_list.item(0))

    def load_reference_widgets(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞"""
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
            from ui.references.perforation_types_view import PerforationTypesTableWidget
            from ui.references.lining_types_view import LiningTypesTableWidget
            from ui.references.cutting_parts_view import CuttingPartsTableWidget
            from ui.references.lasting_types_view import LastingTypesTableWidget

            # –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã
            self.perforation_widget = PerforationTypesTableWidget()
            self.lining_widget = LiningTypesTableWidget()
            self.cutting_widget = CuttingPartsTableWidget()
            self.lasting_widget = LastingTypesTableWidget()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫
            self.content_widget.addWidget(self.perforation_widget)
            self.content_widget.addWidget(self.lining_widget)
            self.content_widget.addWidget(self.cutting_widget)
            self.content_widget.addWidget(self.lasting_widget)

            print("‚úÖ –í—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–∂–µ—Ç–æ–≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: {e}")
            import traceback
            traceback.print_exc()

            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
            error_label = QLabel(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤:\n{e}")
            error_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
            error_label.setStyleSheet("color: red; font-size: 14px; padding: 20px;")
            self.content_widget.addWidget(error_label)

    def on_reference_selected(self, item):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞"""
        if not item:
            return

        ref_id = item.data(Qt.ItemDataRole.UserRole)

        # –ú–∞–ø–ø–∏–Ω–≥ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∫ –∏–Ω–¥–µ–∫—Å–∞–º –≤ —Å—Ç–µ–∫–µ
        ref_mapping = {
            "perforation_types": 0,
            "lining_types": 1,
            "cutting_parts": 2,
            "lasting_types": 3
        }

        if ref_id in ref_mapping:
            self.content_widget.setCurrentIndex(ref_mapping[ref_id])
            self.current_reference = ref_id
            print(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫: {item.text()}")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫: {ref_id}")


def main():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    app = QApplication(sys.argv)
    window = ReferencesMainView()
    window.show()
    sys.exit(app.exec())


if __name__ == "__main__":
    main()