#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã specifications
"""
from database.connection import DatabaseConnection

def check_spec_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã specifications"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã specifications...")

    db = DatabaseConnection()
    conn = db.get_connection()

    if not conn:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î")
        return

    try:
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã specifications
        cursor.execute("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'specifications'
            ORDER BY ordinal_position;
        """)

        columns = cursor.fetchall()

        if not columns:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ specifications –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã specifications:")
        print("-" * 50)
        for col_name, data_type, is_nullable in columns:
            nullable = "NULL" if is_nullable == "YES" else "NOT NULL"
            print(f"  {col_name:<20} | {data_type:<15} | {nullable}")

        # –¢–µ–ø–µ—Ä—å –ø–æ—Å–º–æ—Ç—Ä–∏–º –¥–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –¥–ª—è –º–æ–¥–µ–ª–∏ –•–ª—ã–Ω–æ–≤
        print("\nüîç –î–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π –¥–ª—è –º–æ–¥–µ–ª–∏ –•–ª—ã–Ω–æ–≤ (ID: 7):")
        cursor.execute("""
            SELECT * FROM specifications WHERE model_id = 7
        """)

        specs = cursor.fetchall()

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
        col_names = [desc[0] for desc in cursor.description]

        print(f"\n–ù–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(specs)}")

        for i, spec in enumerate(specs, 1):
            print(f"\nüìÑ –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è #{i}:")
            for j, value in enumerate(spec):
                print(f"  {col_names[j]}: {value}")

        cursor.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if conn:
            db.put_connection(conn)

if __name__ == "__main__":
    check_spec_structure()