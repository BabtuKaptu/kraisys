#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏
"""
import sys
import time
from PyQt6.QtWidgets import QApplication, QMessageBox
from PyQt6.QtCore import QTimer
from PyQt6.QtTest import QTest

from database.connection import DatabaseConnection
from ui.references.model_specification_form_v4 import ModelSpecificationFormV4

def test_parameters_save():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ–ª–∏ –•–ª—ã–Ω–æ–≤...")

    app = QApplication.instance()
    if not app:
        app = QApplication(sys.argv)

    db = DatabaseConnection()

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å –•–ª—ã–Ω–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (ID: 7)
    model_form = ModelSpecificationFormV4(model_id=7, is_variant=False)
    model_form.show()

    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    app.processEvents()
    time.sleep(2)

    print("‚úì –§–æ—Ä–º–∞ –º–æ–¥–µ–ª–∏ –•–ª—ã–Ω–æ–≤ –æ—Ç–∫—Ä—ã—Ç–∞")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏"
    parameters_tab_index = None
    for i in range(model_form.tabs.count()):
        if "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã" in model_form.tabs.tabText(i):
            model_form.tabs.setCurrentIndex(i)
            parameters_tab_index = i
            break

    if parameters_tab_index is not None:
        print("‚úì –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏'")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        print(f"üìã –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü:")
        print(f"   –ü–µ—Ä—Ñ–æ—Ä–∞—Ü–∏—è: {model_form.perforation_table.rowCount()} —Å—Ç—Ä–æ–∫")
        print(f"   –ü–æ–¥–∫–ª–∞–¥–∫–∞: {model_form.lining_table.rowCount()} —Å—Ç—Ä–æ–∫")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        if model_form.perforation_table.rowCount() == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏...")
            try:
                model_form.add_perforation()
                app.processEvents()
                time.sleep(1)
                print("‚úì –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏ –≤—ã–∑–≤–∞–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏: {e}")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–∫–ª–∞–¥–∫–∏ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        if model_form.lining_table.rowCount() == 0:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–∫–ª–∞–¥–∫–∏...")
            try:
                model_form.add_lining()
                app.processEvents()
                time.sleep(1)
                print("‚úì –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª–∞–¥–∫–∏ –≤—ã–∑–≤–∞–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–∫–ª–∞–¥–∫–∏: {e}")

        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (–Ω–µ –±—É–¥–µ–º —Ä–µ–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –¥–∞–Ω–Ω—ã–µ)
        print("üìù –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥—ã —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç
        try:
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç save_model
            selected_perforations = []
            for row in range(model_form.perforation_table.rowCount()):
                item = model_form.perforation_table.item(row, 0)
                if item:
                    perf_id = item.data(1001)  # Qt.ItemDataRole.UserRole
                    if perf_id:
                        selected_perforations.append(perf_id)

            selected_linings = []
            for row in range(model_form.lining_table.rowCount()):
                item = model_form.lining_table.item(row, 0)
                if item:
                    lining_id = item.data(1001)  # Qt.ItemDataRole.UserRole
                    if lining_id:
                        selected_linings.append(lining_id)

            print(f"‚úì –°–æ–±—Ä–∞–Ω—ã ID –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–π: {selected_perforations}")
            print(f"‚úì –°–æ–±—Ä–∞–Ω—ã ID –ø–æ–¥–∫–ª–∞–¥–æ–∫: {selected_linings}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

    else:
        print("‚ùå –í–∫–ª–∞–¥–∫–∞ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    model_form.close()

    print("=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_parameters_save()
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–µ!")

if __name__ == "__main__":
    main()