"""–î–∏–∞–ª–æ–≥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –º–æ–¥–µ–ª–∏"""
from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QTableWidget, QTableWidgetItem,
    QPushButton, QLabel, QMessageBox, QHeaderView
)
from PyQt6.QtCore import Qt, pyqtSignal
import psycopg2.extras


class VariantsListDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –º–æ–¥–µ–ª–∏"""

    variant_selected = pyqtSignal(int)  # –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    def __init__(self, model_id, db, parent=None):
        super().__init__(parent)
        from debug_logger import log_debug

        log_debug(f"üèóÔ∏è VariantsListDialog INIT: –ø–æ–ª—É—á–µ–Ω model_id={model_id}")

        self.model_id = model_id
        self.db = db

        log_debug(f"üèóÔ∏è VariantsListDialog: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω self.model_id={self.model_id}")

        self.setWindowTitle("–í–∞—Ä–∏–∞–Ω—Ç—ã –º–æ–¥–µ–ª–∏")
        self.setModal(True)
        self.resize(800, 400)

        self.setup_ui()
        self.load_variants()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.header_label = QLabel("–ó–∞–≥—Ä—É–∑–∫–∞...")
        layout.addWidget(self.header_label)

        # –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        self.table = QTableWidget()
        self.table.setColumnCount(6)
        self.table.setHorizontalHeaderLabels([
            "ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–æ–¥", "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é",
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", "–ê–∫—Ç–∏–≤–µ–Ω"
        ])

        header = self.table.horizontalHeader()
        header.setSectionResizeMode(0, QHeaderView.ResizeMode.Fixed)
        header.setSectionResizeMode(1, QHeaderView.ResizeMode.Stretch)
        header.setSectionResizeMode(2, QHeaderView.ResizeMode.ResizeToContents)
        header.setSectionResizeMode(3, QHeaderView.ResizeMode.ResizeToContents)
        header.setSectionResizeMode(4, QHeaderView.ResizeMode.ResizeToContents)
        header.setSectionResizeMode(5, QHeaderView.ResizeMode.ResizeToContents)

        header.resizeSection(0, 50)

        self.table.setSelectionBehavior(QTableWidget.SelectionBehavior.SelectRows)
        self.table.setSelectionMode(QTableWidget.SelectionMode.SingleSelection)
        self.table.doubleClicked.connect(self.edit_variant)

        layout.addWidget(self.table)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = QHBoxLayout()

        self.add_btn = QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç")
        self.add_btn.clicked.connect(self.add_variant)
        buttons_layout.addWidget(self.add_btn)

        self.edit_btn = QPushButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
        self.edit_btn.clicked.connect(self.edit_variant)
        buttons_layout.addWidget(self.edit_btn)

        self.view_btn = QPushButton("üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä")
        self.view_btn.clicked.connect(self.view_variant)
        buttons_layout.addWidget(self.view_btn)

        self.delete_btn = QPushButton("üóë –£–¥–∞–ª–∏—Ç—å")
        self.delete_btn.clicked.connect(self.delete_variant)
        buttons_layout.addWidget(self.delete_btn)

        buttons_layout.addStretch()

        self.close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        self.close_btn.clicked.connect(self.accept)
        buttons_layout.addWidget(self.close_btn)

        layout.addLayout(buttons_layout)

    def load_variants(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"""
        conn = self.db.get_connection()
        if not conn:
            return

        try:
            cursor = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
            cursor.execute("""
                SELECT name, article FROM models WHERE id = %s
            """, (self.model_id,))
            model = cursor.fetchone()

            if model:
                self.header_label.setText(
                    f"–í–∞—Ä–∏–∞–Ω—Ç—ã –º–æ–¥–µ–ª–∏: {model['name']} ({model['article']})"
                )

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
            cursor.execute("""
                SELECT id, variant_name, variant_code, is_default,
                       total_material_cost, is_active
                FROM specifications
                WHERE model_id = %s
                ORDER BY is_default DESC, created_at DESC
            """, (self.model_id,))

            variants = cursor.fetchall()

            self.table.setRowCount(0)
            for variant in variants:
                row = self.table.rowCount()
                self.table.insertRow(row)

                # ID
                self.table.setItem(row, 0, QTableWidgetItem(str(variant['id'])))

                # –ù–∞–∑–≤–∞–Ω–∏–µ
                name = variant['variant_name'] or "–ë–∞–∑–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"
                self.table.setItem(row, 1, QTableWidgetItem(name))

                # –ö–æ–¥
                code = variant['variant_code'] or "-"
                self.table.setItem(row, 2, QTableWidgetItem(code))

                # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                default = "‚úì" if variant['is_default'] else ""
                self.table.setItem(row, 3, QTableWidgetItem(default))

                # –°—Ç–æ–∏–º–æ—Å—Ç—å
                cost = f"{variant['total_material_cost']:.2f}" if variant['total_material_cost'] else "-"
                self.table.setItem(row, 4, QTableWidgetItem(cost))

                # –ê–∫—Ç–∏–≤–µ–Ω
                active = "‚úì" if variant['is_active'] else "‚úó"
                self.table.setItem(row, 5, QTableWidgetItem(active))

            cursor.close()

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {e}")

    def add_variant(self):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"""
        from debug_logger import log_debug

        log_debug("üöÄ –í–´–ó–í–ê–ù add_variant()")
        log_debug(f"üéØ VariantsListDialog.add_variant: –ø–µ—Ä–µ–¥–∞–µ–º model_id={self.model_id}")

        from ui.references.model_specification_form_v5 import ModelSpecificationFormV5

        dialog = ModelSpecificationFormV5(
            model_id=self.model_id,
            is_variant=True,  # –ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≤—Å–µ–≥–¥–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
            parent=self
        )
        dialog.saved.connect(self.load_variants)
        dialog.exec()

    def edit_variant(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"""
        from debug_logger import log_debug

        current_row = self.table.currentRow()
        if current_row < 0:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return

        variant_id = int(self.table.item(current_row, 0).text())
        log_debug(f"üéØ edit_variant: –ø–æ–ª—É—á–µ–Ω variant_id={variant_id} –∏–∑ —Å—Ç—Ä–æ–∫–∏ {current_row}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±–∞–∑–æ–≤—ã–π –ª–∏ —ç—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç
        is_default = self.table.item(current_row, 3).text() == "‚úì"
        log_debug(f"üéØ edit_variant: is_default={is_default} (–∑–Ω–∞—á–∏—Ç is_variant={not is_default})")

        log_debug(f"üéØ edit_variant: –≤—ã–∑—ã–≤–∞–µ–º ModelSpecificationFormV5 —Å model_id={self.model_id}, is_variant={not is_default}, variant_id={variant_id}")

        # –î–ª—è –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω—É –∏ —Ç—É –∂–µ —Ñ–æ—Ä–º—É
        from ui.references.model_specification_form_v5 import ModelSpecificationFormV5
        dialog = ModelSpecificationFormV5(
            model_id=self.model_id,  # ID –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏
            is_variant=not is_default,  # True –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞, False –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ
            variant_id=variant_id,  # ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            parent=self
        )

        dialog.saved.connect(self.load_variants)
        dialog.exec()

    def view_variant(self):
        """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞"""
        current_row = self.table.currentRow()
        if current_row < 0:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
            return

        variant_id = int(self.table.item(current_row, 0).text())

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±–∞–∑–æ–≤—ã–π –ª–∏ —ç—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç
        is_default = self.table.item(current_row, 3).text() == "‚úì"

        from ui.references.model_specification_form_v5 import ModelSpecificationFormV5
        dialog = ModelSpecificationFormV5(
            model_id=self.model_id,  # ID –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏
            is_variant=not is_default,  # True –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞, False –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ
            variant_id=variant_id,  # ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            parent=self
        )
        dialog.exec()

    def delete_variant(self):
        """–£–¥–∞–ª–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç"""
        current_row = self.table.currentRow()
        if current_row < 0:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±–∞–∑–æ–≤—ã–π –ª–∏ —ç—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç
        is_default = self.table.item(current_row, 3).text() == "‚úì"
        if is_default:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –±–∞–∑–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –º–æ–¥–µ–ª–∏")
            return

        variant_name = self.table.item(current_row, 1).text()
        reply = QMessageBox.question(
            self,
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            f"–£–¥–∞–ª–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç '{variant_name}'?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.Yes:
            variant_id = int(self.table.item(current_row, 0).text())

            conn = self.db.get_connection()
            if conn:
                try:
                    cursor = conn.cursor()
                    cursor.execute("""
                        DELETE FROM specifications WHERE id = %s
                    """, (variant_id,))
                    conn.commit()
                    cursor.close()

                    self.load_variants()
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–í–∞—Ä–∏–∞–Ω—Ç —É–¥–∞–ª–µ–Ω")

                except Exception as e:
                    conn.rollback()
                    QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")