#!/usr/bin/env python
"""
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ModelsViewFull –∏ ModelSpecificationFormV4
"""
import sys
import time
from PyQt6.QtWidgets import QApplication, QMessageBox
from PyQt6.QtCore import QTimer
from PyQt6.QtTest import QTest

from database.connection import DatabaseConnection
from ui.references.models_view_full import ModelsViewFull
from ui.references.model_specification_form_v4 import ModelSpecificationFormV4

def test_complete_workflow():
    """–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ workflow"""
    print("üß™ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ workflow –º–æ–¥–µ–ª–∏...")

    app = QApplication.instance()
    if not app:
        app = QApplication(sys.argv)

    db = DatabaseConnection()

    # –¢–µ—Å—Ç 1: –û—Ç–∫—Ä—ã—Ç–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã –º–æ–¥–µ–ª–µ–π
    print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã –º–æ–¥–µ–ª–µ–π...")
    main_view = ModelsViewFull()
    main_view.show()

    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    app.processEvents()
    time.sleep(1)

    print("‚úì –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ –º–æ–¥–µ–ª–µ–π –æ—Ç–∫—Ä—ã—Ç–∞")

    # –¢–µ—Å—Ç 2: –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
    print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏...")
    model_form = ModelSpecificationFormV4()
    model_form.show()

    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
    app.processEvents()
    time.sleep(1)

    print("‚úì –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞")

    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∫–ª–∞–¥–∫–∏ "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏"
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–∫–∏ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏'...")
    parameters_found = False
    for i in range(model_form.tabs.count()):
        if "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã" in model_form.tabs.tabText(i):
            model_form.tabs.setCurrentIndex(i)
            parameters_found = True
            break

    if parameters_found:
        print("‚úì –í–∫–ª–∞–¥–∫–∞ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏' –Ω–∞–π–¥–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
    else:
        print("‚ùå –í–∫–ª–∞–¥–∫–∞ '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    # –¢–µ—Å—Ç 4: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª–µ–π
    print("4. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª–µ–π...")
    model_form.name_input.setText("–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å workflow")
    model_form.article_input.setText("TWF001")
    model_form.last_code_input.setText("75")

    print("‚úì –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")

    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
    print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤...")

    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if hasattr(model_form, 'lasting_combo') and model_form.lasting_combo.count() > 0:
        print(f"‚úì –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–∏–ø–æ–≤ –∑–∞—Ç—è–∂–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω: {model_form.lasting_combo.count()} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    else:
        print("‚ö†Ô∏è –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–∏–ø–æ–≤ –∑–∞—Ç—è–∂–∫–∏ –ø—É—Å—Ç")

    if hasattr(model_form, 'perforation_table'):
        print("‚úì –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
    else:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–µ—Ä—Ñ–æ—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

    if hasattr(model_form, 'lining_table'):
        print("‚úì –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª–∞–¥–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
    else:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª–∞–¥–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

    # –¢–µ—Å—Ç 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ë–î
    print("6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ë–î...")

    conn_count = 0
    connections = []
    try:
        # –ü–æ–ª—É—á–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        for i in range(3):
            conn = db.get_connection()
            if conn:
                connections.append(conn)
                conn_count += 1

        print(f"‚úì –ü–æ–ª—É—á–µ–Ω–æ {conn_count} —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏–∑ –ø—É–ª–∞")

        # –í–µ—Ä–Ω–µ–º –∏—Ö –æ–±—Ä–∞—Ç–Ω–æ
        for conn in connections:
            db.put_connection(conn)

        print("‚úì –í—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –ø—É–ª")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ø—É–ª–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: {e}")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—ã
    model_form.close()
    main_view.close()

    print("=" * 50)
    print("üèÅ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

    return True

if __name__ == "__main__":
    success = test_complete_workflow()
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö!")